const n=JSON.parse('{"key":"v-16df3f06","path":"/posts/tips/coding-test.html","title":"코딩테스트 준비 팁","lang":"ko-KR","frontmatter":{"icon":"pen","date":"2023-11-20T00:00:00.000Z","category":["개발 팁"],"tag":["코딩테스트"],"sticky":true,"star":true,"description":"코딩테스트 준비 팁 자바스크립트(Node js) readline 파이썬 input 처럼 쓰기 const readline = require(\\"readline\\") const { stdin, exit } = require(\\"process\\") const rl = readline.createInterface({ input: stdin }) function input() { return new Promise(resolve =&gt; { rl.question(\\"\\", resolve) }) } async function main() { const n = Number(await input()) const nums = (await input()).split(\\" \\").map(n =&gt; Number(n)) console.log({ n, nums, }) } main().then(() =&gt; { exit() })","head":[["meta",{"property":"og:url","content":"https://bisue.github.io/posts/tips/coding-test.html"}],["meta",{"property":"og:site_name","content":"비수의 개발 창고"}],["meta",{"property":"og:title","content":"코딩테스트 준비 팁"}],["meta",{"property":"og:description","content":"코딩테스트 준비 팁 자바스크립트(Node js) readline 파이썬 input 처럼 쓰기 const readline = require(\\"readline\\") const { stdin, exit } = require(\\"process\\") const rl = readline.createInterface({ input: stdin }) function input() { return new Promise(resolve =&gt; { rl.question(\\"\\", resolve) }) } async function main() { const n = Number(await input()) const nums = (await input()).split(\\" \\").map(n =&gt; Number(n)) console.log({ n, nums, }) } main().then(() =&gt; { exit() })"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/thumb.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-11-20T08:29:05.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"코딩테스트 준비 팁"}],["meta",{"property":"article:author","content":"변찬혁"}],["meta",{"property":"article:tag","content":"코딩테스트"}],["meta",{"property":"article:published_time","content":"2023-11-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-20T08:29:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"코딩테스트 준비 팁\\",\\"image\\":[\\"/thumb.png\\"],\\"datePublished\\":\\"2023-11-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-20T08:29:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"변찬혁\\",\\"url\\":\\"https://github.com/Bisue\\",\\"email\\":\\"bdu00chch@gmail.com\\"}]}"]]},"headers":[{"level":3,"title":"자바스크립트(Node js)","slug":"자바스크립트-node-js","link":"#자바스크립트-node-js","children":[]},{"level":3,"title":"C++","slug":"c","link":"#c","children":[]}],"git":{"createdTime":1700468945000,"updatedTime":1700468945000,"contributors":[{"name":"Chanhyuk Byeon","email":"bdu00chch@gmail.com","commits":1}]},"readingTime":{"minutes":0.21,"words":64},"filePathRelative":"posts/tips/coding-test.md","localizedDate":"2023년 11월 20일","excerpt":"<h1> 코딩테스트 준비 팁</h1>\\n<h3> 자바스크립트(Node js)</h3>\\n<h4> readline 파이썬 input 처럼 쓰기</h4>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> readline <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"readline\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> stdin<span class=\\"token punctuation\\">,</span> exit <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"process\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">const</span> rl <span class=\\"token operator\\">=</span> readline<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createInterface</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">input</span><span class=\\"token operator\\">:</span> stdin <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">input</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Promise</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">resolve</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    rl<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">question</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">,</span> resolve<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> n <span class=\\"token operator\\">=</span> <span class=\\"token function\\">Number</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">await</span> <span class=\\"token function\\">input</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token keyword\\">const</span> nums <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">await</span> <span class=\\"token function\\">input</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">split</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\" \\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">n</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">Number</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    n<span class=\\"token punctuation\\">,</span>\\n    nums<span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">exit</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
