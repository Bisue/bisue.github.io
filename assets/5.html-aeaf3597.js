import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,d as n,e as s,b as t,a as p}from"./app-492cdcbe.js";const i={},u=p(`<h1 id="pusher-를-이용한-실시간-채팅-웹앱-만들기-5-w-laravel-nuxt" tabindex="-1"><a class="header-anchor" href="#pusher-를-이용한-실시간-채팅-웹앱-만들기-5-w-laravel-nuxt" aria-hidden="true">#</a> Pusher 를 이용한 실시간 채팅 웹앱 만들기 #5 (w/ Laravel, Nuxt)</h1><p>이번 글에서는 채팅 앱 프론트엔드 코드를 작성하고 <code>Pusher</code>, 만들어놓은 <code>Laravel</code> 백엔드와 각각 연결해서 가장 간단한 채팅 앱을 만들어보겠습니다.</p><h2 id="프론트엔드-구현" tabindex="-1"><a class="header-anchor" href="#프론트엔드-구현" aria-hidden="true">#</a> 프론트엔드 구현</h2><h3 id="pusher-연결을-위한-패키지-설치" tabindex="-1"><a class="header-anchor" href="#pusher-연결을-위한-패키지-설치" aria-hidden="true">#</a> <code>Pusher</code> 연결을 위한 패키지 설치</h3><p>우리의 <code>Nuxt</code> 프로젝트에서 <code>Pusher</code>를 연결하여 채널을 구독하기 위해서 <code>pusher-js</code> 패키지와 <code>laravel-echo</code> 패키지를 설치합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> laravel-echo pusher-js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),r={class:"hint-container info"},k=n("p",{class:"hint-container-title"},"정보",-1),d=n("code",null,"Pusher",-1),v=n("code",null,"pusher-js",-1),m=n("code",null,"laravel-echo",-1),g=n("code",null,"Laravel",-1),h=n("code",null,"pusher-js",-1),b=n("code",null,"laravel-echo",-1),f={href:"https://laravel.kr/docs/8.x/broadcasting#receiving-broadcasts",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"Laravel",-1),q=n("code",null,"pusher-js",-1),w={href:"https://pusher.com/docs/channels/using_channels/client-api-overview/",target:"_blank",rel:"noopener noreferrer"},_=p(`<h3 id="chatapp-컴포넌트-작성" tabindex="-1"><a class="header-anchor" href="#chatapp-컴포넌트-작성" aria-hidden="true">#</a> ChatApp 컴포넌트 작성</h3><p><code>chat</code> 채널에 구독하고 <code>ChatSent</code> <code>Laravel</code> 이벤트를 수신하여 화면에 목록으로 보여주며, 다른 사용자들에게 메세지를 보낼 수 있는 <code>ChatApp</code> 컴포넌트를 작성하겠습니다.</p><p><code>Nuxt</code>에서 컴포넌트는 <code>components/</code> 디렉토리에 작성합니다. 이 디렉토리에 있는 <code>.vue</code> 파일들은 <code>nuxt.config.js</code> 파일의 <code>components</code> 옵션이 <code>true</code> 라면 자동으로 임포트됩니다. (기본값)</p><p><code>components/ChatApp.vue</code> 파일을 만들고 컴포넌트를 작성합니다.</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rounded shadow-lg border p-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 채팅 제목 라인 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-lg font-bold<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>채팅<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 구분선 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-gray-200 my-2<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span> 1px</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 대화 로그 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rounded border p-2 mb-2<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">min-height</span><span class="token punctuation">:</span> 200px</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 채팅 아이템 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chat in chats<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chat.chatAt<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex p-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 송신자 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>font-bold tracking-wide mr-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ chat.sender }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 내용 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tracking-tight<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          {{ chat.message }}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sending<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-right text-sm p-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>보내는 중..<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex flex-wrap text-sm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-full mb-1 sm:w-1/4 sm:mb-0 sm:pr-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-full rounded border p-1 focus:outline-none focus:ring-1 focus:ring-blue-500<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sender<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>이름<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-3/4 sm:w-2/4 sm:px-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-full rounded border p-1 focus:outline-none focus:ring-1 focus:ring-blue-500<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>message<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>메세지<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@keydown.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>send<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-1/4 pl-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-full h-full rounded bg-blue-500 text-white font-bold<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>send<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>전송<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> Echo <span class="token keyword">from</span> <span class="token string">&#39;laravel-echo&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Pusher <span class="token keyword">from</span> <span class="token string">&#39;pusher-js&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">token</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">chats</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">echo</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token literal-property property">sending</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>sending<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">sender</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>sender<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>message<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;입력을 확인해주세요!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>sending <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>message<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost:8000/chat/send&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>sending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">validate</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>sender <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>message <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">onChatSent</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>chats<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>window<span class="token punctuation">.</span>Pusher<span class="token punctuation">)</span> window<span class="token punctuation">.</span>Pusher <span class="token operator">=</span> Pusher<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>echo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>echo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Echo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">broadcaster</span><span class="token operator">:</span> <span class="token string">&#39;pusher&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;e6e27d54525dcd0b0de1&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">cluster</span><span class="token operator">:</span> <span class="token string">&#39;ap3&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span>echo<span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token string">&#39;chat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">&#39;ChatSent&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChatSent</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>echo<span class="token punctuation">.</span><span class="token function">leaveChannel</span><span class="token punctuation">(</span><span class="token string">&#39;chat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;beforeunload&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>disconnect<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>sender<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ChatApp</code> 컴포넌트가 마운트되면 <code>laravel-echo</code> 라이브러리를 사용해 <code>chat</code> 채널의 <code>ChatSent</code> 이벤트를 구독하도록 했습니다. <code>ChatSent</code> 이벤트를 받으면 <code>chats</code> 배열에 추가하고 이 배열을 채팅창의 느낌으로 화면에 보여줬습니다.</p><p>하단의 텍스트박스에 이름과 메세지를 입력하고 엔터를 치거나 전송 버튼을 누르면 <code>send</code> 메서드를 통해 입력을 검증한 뒤 이전 포스트에서 만들어놓은 <code>/chat/send</code> URL로 보내 브로드캐스팅하여 다른 구독자들에게 알리도록 했습니다.</p><h3 id="index-페이지-작성" tabindex="-1"><a class="header-anchor" href="#index-페이지-작성" aria-hidden="true">#</a> index 페이지 작성</h3><p><code>ChatApp</code> 컴포넌트를 만들었으니, 이 컴포넌트를 보여줄 페이지가 필요합니다.</p>`,9),x=n("code",null,"Nuxt",-1),C=n("code",null,"pages/",-1),$=n("code",null,".vue",-1),L=n("code",null,"vue-router",-1),S={href:"https://ko.nuxtjs.org/docs/2.x/directory-structure/pages",target:"_blank",rel:"noopener noreferrer"},N=p(`<p>우리가 만든 컴포넌트를 <code>/</code> Path 로 들어오면 바로 보이도록, <code>pages/</code> 디렉토리에 <code>index.vue</code> 파일을 만들어서 <code>ChatApp</code> 컴포넌트를 적당히 렌더링하겠습니다.</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container mx-auto p-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ChatApp</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mx-auto<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">max-width</span><span class="token punctuation">:</span> 500px</span><span class="token punctuation">&quot;</span></span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nuxt-개발-서버-실행-및-테스트" tabindex="-1"><a class="header-anchor" href="#nuxt-개발-서버-실행-및-테스트" aria-hidden="true">#</a> Nuxt 개발 서버 실행 및 테스트</h3><p>간단하게 프론트엔드 코드를 모두 작성했습니다.</p><p>이제 <code>Nuxt</code> 개발 서버를 실행해 우리가 만든 프론트엔드 코드를 제공하는 <code>Node</code> 서버를 실행시켜 접속해봅시다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),A={href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"},P=p(`<figure><img src="https://images.velog.io/images/bdu00chch/post/a48623f5-6d44-4e66-a8c0-d1d856b58173/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>우리의 첫 채팅 앱이 완성되었습니다!</p><p>여러개의 탭이나 창을 띄워 여러개의 페이지를 띄우고, 그 중 하나의 페이지에서 이름과 메세지를 입력하고 전송을 눌러보세요.</p><figure><img src="https://images.velog.io/images/bdu00chch/post/4cc0f249-c930-4c8d-99a6-16db1bd28c29/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>하나의 페이지에서 메세지를 전송하면, 다른 페이지들에 그 채팅이 전달됩니다! 성공적입니다.</p><p>그런데 지금 서버의 코드는 DB를 사용하지 않아서 채팅 기록들이 남지 않고 새로고침하면 사라집니다.</p><h2 id="laravel-서버-db-연동" tabindex="-1"><a class="header-anchor" href="#laravel-서버-db-연동" aria-hidden="true">#</a> <code>Laravel</code> 서버 DB 연동</h2><p>간단하게 채팅 기록을 저장하는 테이블을 만들어 채팅들을 저장하고, 프론트에서는 채팅 앱이 처음 로딩될 때 서버에 요청하여 DB에 있는 기존 채팅들을 가져와 목록에 추가시켜보겠습니다.</p><h3 id="chat-모델-및-마이그레이션-생성" tabindex="-1"><a class="header-anchor" href="#chat-모델-및-마이그레이션-생성" aria-hidden="true">#</a> <code>Chat</code> 모델 및 마이그레이션 생성</h3><p><code>Laravel</code>은 데이터베이스를 다룰 때, 일반적으로 SQL을 직접 사용하지 않고, <code>Eloquent</code> ORM을 사용하여 테이블을 모델로 추상화하여 다룰 수 있는 인터페이스를 제공합니다.</p><p><code>Laravel</code>의 ORM 기능을 사용하기 위해 우리의 채팅 기록을 표현할 <code>Chat</code> 모델을 만들겠습니다. 모델이 만들어지는 폴더는 <code>Laravel</code> 8.x 기준 <code>/app/Models</code> 디렉토리입니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan make:model Chat <span class="token parameter variable">-m</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>모델을 만들면서 <code>-m</code> 옵션을 붙였습니다. <code>-m</code> 옵션을 붙이면 모델에 대한 마이그레이션 파일도 같이 생성합니다.</p>`,13),j=n("code",null,"Laravel",-1),B={href:"https://laravel.kr/docs/6.x/migrations",target:"_blank",rel:"noopener noreferrer"},E=p(`<p>만들어진 마이그레이션 파일에 우리의 채팅 기록 데이터에 필요한 <code>Column</code>들을 추가하여 <code>chats</code> 테이블에 대한 마이그레이션을 작성합니다.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Migrations<span class="token punctuation">\\</span>Migration</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Schema<span class="token punctuation">\\</span>Blueprint</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Schema</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">CreateChatsTable</span> <span class="token keyword">extends</span> <span class="token class-name">Migration</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Run the migrations.
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">void</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">up</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;chats&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Blueprint</span> <span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sender&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;message&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">timestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Reverse the migrations.
     *
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">void</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">dropIfExists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;chats&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>보낸 사람의 이름을 저장하는 <code>sender</code>, 보낸 메세지를 저장하는 <code>message</code> <code>Column</code>을 추가했습니다.</p><p>마이그레이션을 모두 작성했으면, 아래 명령을 실행해 추가한 마이그레이션을 실행합니다. 해당 마이그레이션이 실행되면 <code>chats</code> 테이블이 생성됩니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan migrate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>이제 <code>Chat</code> 모델 파일을 보겠습니다.</p><p><code>Laravel</code>의 모델은 기본적으로 <code>모델 이름을 복수형으로 바꾼 것의 snakeCase</code>을 이름으로 가진 테이블을 찾아 연결됩니다. 모델을 만들때 <code>-m</code> 옵션을 붙여 생성하면 생성되는 마이그레이션의 테이블 이름은 기본적으로 이 형태를 띕니다. 따라서 모델이 어느 테이블에 대한 건지 테이블 이름을 지정해 줄 필요가 없습니다.</p>`,7),I=n("code",null,"guarded",-1),M=n("code",null,"[]",-1),R={href:"https://laravel.kr/docs/6.x/eloquent#mass-assignment",target:"_blank",rel:"noopener noreferrer"},D=p(`<p>모델 준비는 이것으로 끝났습니다. 이제 <code>ChatController</code>를 수정하면서 <code>Chat</code> 모델을 사용하여 <code>DB</code>와 연동해보겠습니다.</p><h3 id="chatcontroller-개선" tabindex="-1"><a class="header-anchor" href="#chatcontroller-개선" aria-hidden="true">#</a> <code>ChatController</code> 개선</h3><p>기존 <code>send</code> 메서드에 validation을 추가하고, <code>Chat</code> 모델을 이용해 데이터베이스에 새 채팅 데이터를 넣은 후 브로드캐스팅 하도록 수정합니다.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">protected</span> <span class="token variable">$rules</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;sender&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;required&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;message&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;required&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$validated</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">rules</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$chat</span> <span class="token operator">=</span> <span class="token class-name static-context">Chat</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token variable">$validated</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">broadcast</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChatSent</span><span class="token punctuation">(</span><span class="token variable">$chat</span><span class="token operator">-&gt;</span><span class="token property">sender</span><span class="token punctuation">,</span> <span class="token variable">$chat</span><span class="token operator">-&gt;</span><span class="token property">message</span><span class="token punctuation">,</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;result&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;success&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;chat&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$chat</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>프론트에서 <code>ChatApp</code>이 처음 로드될 때, 서버 데이터베이스에 담겨있는 기존 대화 기록들을 가져올 수 있어야 합니다. 이를 위한 <code>load</code> 메서드를 만듭니다.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$chats</span> <span class="token operator">=</span> <span class="token class-name static-context">Chat</span><span class="token operator">::</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;result&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;success&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;chats&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$chats</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="라우트-추가" tabindex="-1"><a class="header-anchor" href="#라우트-추가" aria-hidden="true">#</a> 라우트 추가</h3><p>새로 만든 <code>load</code> 메서드에 대한 라우트를 만들어줍니다. <code>[GET] /chats</code> 요청을 연결하겠습니다.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/chats&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token class-name static-context">ChatController</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;load&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>백엔드 쪽 준비는 끝났습니다.</p><h3 id="chatapp-컴포넌트-개선" tabindex="-1"><a class="header-anchor" href="#chatapp-컴포넌트-개선" aria-hidden="true">#</a> <code>ChatApp</code> 컴포넌트 개선</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// ...</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">token</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">chats</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">echo</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token literal-property property">sending</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">async</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost:8000/chats&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>chats <span class="token operator">=</span> data<span class="token punctuation">.</span>chats<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>기존에서 추가한 부분은 <code>fetch</code> 메서드 하나입니다.</p><p><code>fetch</code> 메서드를 추가하여 그 내부에서 <code>[GET] /chats</code> 요청을 하고 그것을 채팅 목록에 초기화합니다. <code>fetch</code> 메서드는 <code>Nuxt</code>에서 제공해주는 lifecycle hook 입니다. SSR 모드에서, 페이지를 렌더링 하기 전에 API 호출 등을 통해 데이터를 가져올 수 있게 합니다.</p><h2 id="완료" tabindex="-1"><a class="header-anchor" href="#완료" aria-hidden="true">#</a> 완료</h2>`,15),T=n("code",null,"Laravel",-1),V=n("code",null,"php artisan serve",-1),z=n("code",null,"Nuxt",-1),G=n("code",null,"npm run dev",-1),O={href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"},F=n("p",null,"이전과는 다르게 페이지가 다시 로딩되어도 기존 채팅 기록이 사라지지 않는 것을 확인할 수 있습니다.",-1);function Q(U,H){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("div",r,[k,n("blockquote",null,[n("p",null,[d,s("와 연결하려면 "),v,s("만 설치하여 연결해도 되지만 "),m,s(" 패키지는 "),g,s("에서 보내는 이벤트를 더 편하게 받을 수 있도록 "),h,s("를 감싼 패키지입니다. "),b,s("의 자세한 내용은 "),n("a",f,[y,s(" 문서를 참고"),t(a)]),s("하세요. "),q,s("만 이용하여 연결하는 방법은 "),n("a",w,[s("Pusher 문서를 참고"),t(a)]),s("하세요.")])])]),_,n("p",null,[x,s("에서 페이지 컴포넌트는 "),C,s(" 디렉토리에 작성합니다. 해당 디렉토리에 존재하는 "),$,s(" 파일들은 자동으로 자신의 파일명으로 라우트("),L,s(")를 생성합니다. "),n("a",S,[s("참고"),t(a)])]),N,n("p",null,[s("위 명령을 실행하면 잠시 뒤 서버가 실행됩니다. 기본적으로 "),n("a",A,[s("http://localhost:3000"),t(a)]),s(" 에서 실행됩니다. 크롬으로 접속해봅시다.")]),P,n("p",null,[s("마이그레이션은 데이터베이스 스키마 조작을 프로그래밍적으로 정의해두고 실행할 수 있도록 해주는 "),j,s("의 기능입니다. 다른 환경 간에 쉽게 스키마를 동기화할 수 있도록 사용합니다. "),n("a",B,[s("참고"),t(a)])]),E,n("p",null,[s("나중에 대량 할당(Mass Assignments)를 사용하기 위해 "),I,s(" 속성을 "),M,s("로 설정하여 모든 프로퍼티를 대량 할당 가능하게 합니다. "),n("a",R,[s("참고"),t(a)])]),D,n("p",null,[s("완성입니다. "),T,s(" 프로젝트를 "),V,s(" 명령으로 띄우고, "),z,s(" 프로젝트에서 "),G,s(" 명령을 실행하고 "),n("a",O,[s("http://localhost:3000"),t(a)]),s(" 에 들어가서 채팅을 몇번 쳐보고 새로고침을 눌러보세요.")]),F])}const W=e(i,[["render",Q],["__file","5.html.vue"]]);export{W as default};
