import{_ as t,W as d,X as n,$ as e,a0 as o,Z as c,Y as a,D as l}from"./framework-4c9514da.js";const s={},r=e("h1",{id:"pusher-를-이용한-실시간-채팅-웹앱-만들기-4-w-laravel-nuxt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pusher-를-이용한-실시간-채팅-웹앱-만들기-4-w-laravel-nuxt","aria-hidden":"true"},"#"),o(" Pusher 를 이용한 실시간 채팅 웹앱 만들기 #4 (w/ Laravel, Nuxt)")],-1),g=e("p",null,[o("이번 글에서는 가장 간단한 형태의 채팅 앱 프론트엔드 코드를 작성하기 전에, "),e("code",null,"Nuxt"),o("(or "),e("code",null,"Vue"),o(") 개발환경을 설정해보겠습니다.")],-1),p={class:"hint-container info"},u=e("p",{class:"hint-container-title"},"정보",-1),h=e("code",null,"Node",-1),f=e("code",null,"NPM",-1),x={href:"https://nodejs.org/ko/",target:"_blank",rel:"noopener noreferrer"},b=e("code",null,"Chocolatey",-1),m=a(`<h2 id="nuxt" tabindex="-1"><a class="header-anchor" href="#nuxt" aria-hidden="true">#</a> Nuxt?</h2><p>시리즈의 처음에서 우리는 프론트엔드에서 <code>Nuxt</code>를 사용한다고 했었습니다.</p><p><code>Nuxt</code>는 <code>Vue</code>를 감싼 프레임워크입니다. SEO와 사용자 경험을 위한 <code>SSR</code>을 별도의 까다로운 설정/설계 없이 가능하게 해주고, 기타 <code>Vue</code> 개발에 필요한 여러가지를 프레임워크 차원에서 제공해줍니다.</p><p>다음 시리즈에 만들 가장 간단한 형태의 채팅 앱은 사실 그냥 <code>Vue</code>만 사용해도 더 가볍고 쉽게 만들 수 있습니다.</p><p>그렇지만 앞으로 추가할 많은 기능들의 구현에서의 개발 편의성과 실제 배포시에 검색엔진 최적화 등을 생각하면 처음부터 <code>Nuxt</code>로 진행하는 것이 더 나은 듯 해서 현재는 오버헤드가 크긴 하지만 <code>Nuxt</code>로 시작하겠습니다.</p><h2 id="nuxt-개발-환경-설정" tabindex="-1"><a class="header-anchor" href="#nuxt-개발-환경-설정" aria-hidden="true">#</a> Nuxt 개발 환경 설정</h2><div class="hint-container info"><p class="hint-container-title">정보</p><p><code>Nuxt</code>는 <code>Node</code> + <code>NPM</code>(or <code>Yarn</code>) 환경을 필요로 합니다. <code>Node</code>와 <code>NPM</code>이 개발 환경에 설치되어 있다고 가정하고 진행합니다.</p></div><h3 id="새-nuxt-프로젝트-생성" tabindex="-1"><a class="header-anchor" href="#새-nuxt-프로젝트-생성" aria-hidden="true">#</a> 새 Nuxt 프로젝트 생성</h3><p><code>Laravel</code>에서와 같이, <code>Nuxt</code>도 패키지 매니저를 통해 한 줄의 명령으로 새로운 프로젝트 구조를 만들어낼 수 있습니다.</p><p>아래 명령을 사용하면 현재 디렉토리에 지정한 이름의 디렉토리를 만들고 그 안에 <code>Nuxt</code> 프로젝트 구조를 만들어줍니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm init nuxt-app &lt;YOUR_APP_NAME&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>위 명령을 치면, 여러가지 프로젝트에 대한 정보를 물어봅니다. 하나하나 살펴보겠습니다.</p><ol><li></li></ol><figure><img src="https://images.velog.io/images/bdu00chch/post/72aff123-11ac-4e10-88ab-b2ccea408bbc/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>프로젝트의 이름을 물어봅니다. 그냥 엔터를 누르면 소괄호 안에 있는 값이 선택됩니다.</p><ol start="2"><li></li></ol><figure><img src="https://images.velog.io/images/bdu00chch/post/9a8b8fc7-5e22-4522-b602-939d5a3189b3/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>프로젝트에서 <code>JS</code>를 사용할지, <code>TS</code>를 사용할지 물어봅니다. <code>TS</code>는 사용할 계획이 없으므로 <code>JS</code>를 선택합니다.</p><ol start="3"><li></li></ol><figure><img src="https://images.velog.io/images/bdu00chch/post/ae3d18f1-d065-49f6-9bbc-06bebef69fe2/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>프로젝트의 패키지매니저로 <code>Yarn</code>을 사용할건지, <code>NPM</code>을 사용할건지 물어봅니다. <code>NPM</code>을 사용했으므로 <code>NPM</code>을 선택합니다.</p><ol start="4"><li></li></ol><figure><img src="https://images.velog.io/images/bdu00chch/post/db1608e0-631c-4b7f-95e5-aaa4d736b9a6/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>프로젝트에서 사용할 UI 프레임워크를 물어봅니다. 이 시리즈에서는 <code>Tailwind CSS</code>를 사용하겠습니다.</p><ol start="5"><li></li></ol><figure><img src="https://images.velog.io/images/bdu00chch/post/9f71de52-01e9-4098-92b8-255999fe953c/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>추가로 적용할 <code>Nuxt Module</code>을 물어봅니다. 서버로 요청을 보낼 때 <code>Axios</code>를 사용할 것이므로 <code>Axios</code>에만 체크(스페이스바)하고 넘어갑니다.</p><ol start="6"><li></li></ol><figure><img src="https://images.velog.io/images/bdu00chch/post/dbfab703-9373-4f19-ad4d-a008b6c3d815/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>프로젝트에서 사용할 <code>JS Lint</code> 툴을 선택합니다. 저는 개인적으로 <code>ESLint</code>와 <code>Prettier</code>를 <code>VSCode</code>와 연동해서 사용합니다. 개인 취향껏 고르면 됩니다. (사용하지 않으시려면 그냥 넘어가주세요.)</p><ol start="7"><li></li></ol><figure><img src="https://images.velog.io/images/bdu00chch/post/a4e4c469-d23c-4bc4-b1e5-ab9c92c5e748/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>프로젝트에서 사용할 테스트 프레임워크를 물어봅니다. 이 시리즈에서는 테스트는 하지 않을 예정입니다. <code>None</code>을 선택해주세요.</p><ol start="8"><li></li></ol><figure><img src="https://images.velog.io/images/bdu00chch/post/ebb25349-5cd1-4850-874c-5c45455c92be/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>Nuxt</code>의 렌더링 모드를 선택합니다. 우리는 편리한 <code>SSR</code>을 위해 <code>Nuxt</code>를 사용하는 것이므로.. <code>Universal</code>을 선택합니다. 이후에 자유롭게 변경 가능합니다.</p><ol start="9"><li></li></ol><figure><img src="https://images.velog.io/images/bdu00chch/post/52a68e78-e95e-487c-8d3a-fdd40953643b/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>이전과 연결되는 선택지입니다. <code>SSG</code>가 아닌 <code>SSR</code>을 원하므로 <code>Server</code>를 선택합니다.</p><ol start="10"><li></li></ol><figure><img src="https://images.velog.io/images/bdu00chch/post/c9a46eeb-deac-445c-81f4-e61d4a3bf6e0/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>개발 편의에 도움을 주는 추가 툴을 선택합니다. 취향껏 선택하면 됩니다.</p><ol start="11"><li></li></ol><figure><img src="https://images.velog.io/images/bdu00chch/post/0bf325b6-4752-4e12-a286-ca2a831953b2/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>사용할 CI 툴을 선택합니다. 사용 안할 예정이므로 <code>None</code>을 선택합니다.</p><ol start="12"><li></li></ol><figure><img src="https://images.velog.io/images/bdu00chch/post/da4677ee-e07e-4393-9a08-8dbcce10399f/image.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>마지막으로 프로젝트에서 사용할 버전관리 툴을 선택합니다. <code>Git</code>을 사용할 것이므로 <code>Git</code>을 선택하고 넘어갑니다.</p><p>긴 질의응답을 마치면 <code>Nuxt</code>구조가 만들어지기 시작합니다. 환경에 따라 다르지만 금방 걸립니다.</p><h3 id="nuxt-구조-둘러보기" tabindex="-1"><a class="header-anchor" href="#nuxt-구조-둘러보기" aria-hidden="true">#</a> Nuxt 구조 둘러보기</h3><p>새롭게 완성된 <code>Nuxt</code> 프로젝트 내부로 들어가보겠습니다.</p>`,51),_=e("code",null,"Nuxt Module",-1),N={href:"https://ko.nuxtjs.org/docs/2.x/features/configuration",target:"_blank",rel:"noopener noreferrer"},v=a("<p>프로젝트 루트에는 여러개의 폴더들이 존재합니다. 몇몇 디렉토리들은 특수한 기능을 가지고 있습니다. <code>pages</code> 디렉토리에 있는 <code>Vue</code> 컴포넌트들은 각각 페이지로 취급되어 파일명에 해당하는 <code>route</code>(<code>vue-router</code> 사용)가 자동으로 생성됩니다. <code>store</code> 디렉토리에는 <code>Vuex</code> 모듈을 파일로 구분하여 넣어두면 각 파일명에 맞게 모듈화되어 사용됩니다.</p>",1),S={href:"https://ko.nuxtjs.org/docs/2.x/get-started/directory-structure",target:"_blank",rel:"noopener noreferrer"},y=e("h3",{id:"완료",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#완료","aria-hidden":"true"},"#"),o(" 완료")],-1),z=e("p",null,[o("새로운 "),e("code",null,"Nuxt"),o(" 프로젝트를 만들었습니다. 다음 포스트부터 "),e("code",null,"Laravel Echo"),o(" 라이브러리를 사용해 "),e("code",null,"Pusher"),o("와 이전 포스트에서 만든 우리의 "),e("code",null,"Laravel"),o(" 백엔드와 연결해보고 동작을 테스트해보겠습니다.")],-1);function P(V,k){const i=l("ExternalLinkIcon");return d(),n("div",null,[r,g,e("div",p,[u,e("p",null,[o("로컬 개발 환경에 최신 LTS 버전의 "),h,o(" + "),f,o(" 이 설치되어있다고 가정하겠습니다. 설치되어있지 않은 경우 "),e("a",x,[o("Node 사이트"),c(i)]),o(" 에서 자신의 플랫폼에 맞게 설치하거나 Window인 경우 "),b,o(" 패키지 매니저를 사용하여 설치할 수도 있습니다.")])]),m,e("p",null,[o("가장 먼저 눈에 띄는건 nuxt.config.js 파일입니다. 이 파일은 Nuxt에서 가장 중요한 파일입니다. 이 파일에서 "),_,o(" 적용 등 Nuxt와 관련된 여러가지 설정을 할 수 있습니다. 자세한 내용은 "),e("a",N,[o("Nuxt 공식 문서를 참고"),c(i)]),o("해주세요.")]),v,e("p",null,[o("기타 폴더들과 모든 기능들은 이 시리즈에서 다루기는 너무 많아서, "),e("a",S,[o("공식문서"),c(i)]),o("를 참고해주세요.")]),y,z])}const M=t(s,[["render",P],["__file","4.html.vue"]]);export{M as default};
