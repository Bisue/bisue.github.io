import{_ as i,r as c,o as u,c as r,f as l,a as n,b as s,d as a,w as t,e as o}from"./app-5169f2c3.js";const d="/assets/npm-pricing-0dbdd486.png",k="/assets/semantic-versioning-f7c7df17.png",m="/assets/dist-c6269ec6.png",b={},v=n("h1",{id:"npm-라이브러리-배포-1-독립형",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#npm-라이브러리-배포-1-독립형","aria-hidden":"true"},"#"),s(" NPM 라이브러리 배포 - 1) 독립형")],-1),h=n("h2",{id:"개요",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#개요","aria-hidden":"true"},"#"),s(" 개요")],-1),g=n("p",null,"NPM 라이브러리 배포에 관심이 생겨, 배포하려는 라이브러리의 유형별로 배포 프로세스를 나름대로 정리하여 기록하려고 한다.",-1),y=o("<p>개인적인 분류 체계를 두어 라이브러리의 유형을 크게 두 가지로 나누어 구분하려고 한다.</p><ol><li>독립형 <ul><li>다른 기반 패키지 없이 홀로 동작할 수 있는 라이브러리</li></ul></li><li>종속형 <ul><li>다른 기반 패키지 위에서 동작하도록 작성된 라이브러리</li></ul></li></ol><p>이번 포스팅에서는 간단한 함수 몇 개가 포함된 독립형 모듈을 라이브러리화하여 배포하는 프로세스를 정리한다.</p><p>배포된 라이브러리는 <code>ESM</code> 및 <code>CommonJS</code>를 지원하고, <code>Typescript</code>를 지원하도록 구성할 것이다.</p>",4),f={class:"hint-container note"},_=n("p",{class:"hint-container-title"},"참고한 글",-1),j={href:"https://junghyeonsu.com/posts/deploy-simple-util-npm-library/",target:"_blank",rel:"noopener noreferrer"},x=n("h2",{id:"목차",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#목차","aria-hidden":"true"},"#"),s(" 목차")],-1),q={class:"table-of-contents"},S=n("h2",{id:"사전-준비",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#사전-준비","aria-hidden":"true"},"#"),s(" 사전 준비")],-1),M=n("p",null,"본격적으로 라이브러리를 작성하고 배포하기 전 필요한 몇가지 단계가 있다.",-1),w=n("h3",{id:"npm-계정-준비",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#npm-계정-준비","aria-hidden":"true"},"#"),s(" NPM 계정 준비")],-1),P=n("p",null,"NPM 패키지 매니저에 우리가 작성할 라이브러리를 배포할 것이므로, 배포의 주체가 될 NPM 계정을 준비해야 한다.",-1),N=n("p",null,"NPM 공식 홈페이지에서 일반적인 회원가입처럼 가입할 수 있다.",-1),E={href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"},C={class:"hint-container info"},J=n("p",{class:"hint-container-title"},"Public vs Private",-1),T=n("figure",null,[n("img",{src:d,alt:"NPM Pricing",tabindex:"0",loading:"lazy"}),n("figcaption",null,"NPM Pricing")],-1),B=n("p",null,"일반적으로 NPM 을 생각하면 Public 라이브러리만 떠오르지만, Private 라이브러리도 배포 가능하다.",-1),I=n("p",null,"다만, 기본적으로 Pullic 라이브러리 배포는 무제한 무료지만 Private 라이브러리를 배포하려면 Pro 이상의 라이센스를 구매해야 한다.",-1),V={href:"https://www.npmjs.com/products",target:"_blank",rel:"noopener noreferrer"},D=o(`<h3 id="node-개발-환경-준비" tabindex="-1"><a class="header-anchor" href="#node-개발-환경-준비" aria-hidden="true">#</a> Node 개발 환경 준비</h3><p>Node 기반 NPM 라이브러리를 배포할 계획이므로, Node 개발 환경이 필요하다.</p><p>본 포스팅에서는 다음과 같은 환경을 사용한다.</p><ul><li>Windows 11</li><li>Node <code>v18.12.1</code></li><li>NPM <code>v8.19.2</code></li></ul><h2 id="라이브러리-작성" tabindex="-1"><a class="header-anchor" href="#라이브러리-작성" aria-hidden="true">#</a> 라이브러리 작성</h2><p>사전 준비를 마쳤으면, 본격적으로 라이브러리를 작성해본다.</p><h3 id="npm-init" tabindex="-1"><a class="header-anchor" href="#npm-init" aria-hidden="true">#</a> NPM Init</h3><p>개발할 라이브러리를 위한 디렉토리를 생성하고 해당 디렉토리로 이동한다.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> bisue-utils
<span class="token builtin class-name">cd</span> bisue-utils
</code></pre></div><p>라이브러리를 배포하려면 라이브러리의 이름, 버전 등의 해당 라이브러리에 대한 정보가 필요하다. 이들을 설정하기 위해서는 package.json 파일에 해당 정보를 기재하면 된다.</p><p>package.json 파일을 직접 만들 수도 있지만, npm init 명령을 통해 만들 수도 있다. npm init 명령을 통해 기본 package.json 파일을 생성한다.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># -y 옵션을 붙이면 기본 package.json 파일이 생성된다.</span>
<span class="token function">npm</span> init <span class="token parameter variable">-y</span>
</code></pre></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bisue-utils&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>생성된 package.json 파일의 내용을 입맛대로 바꾼다. 현재는 사용하지 않는 프로퍼티는 삭제하고 적절하게 수정한다.</p>`,14),O=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},'"name"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"bisue-utils"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"version"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"0.0.1"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"main"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"src/index.js"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"author"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Bisue"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"license"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"MIT"'),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A={class:"hint-container info"},H=n("p",{class:"hint-container-title"},"Semantic Versioning",-1),z=n("img",{src:k,alt:"Semantic Versioning(https://commons.wikimedia.org/wiki/File:SemanticVersioning.png)",tabindex:"0",loading:"lazy"},null,-1),F={href:"https://commons.wikimedia.org/wiki/File:SemanticVersioning.png",target:"_blank",rel:"noopener noreferrer"},L=n("p",null,"NPM에서의 버전은 Semantic Versioning을 따르는 것을 권장하고 있다.",-1),U=n("p",null,[n("code",null,"."),s("으로 구분된 3가지 숫자는 뒤에서부터 Patch, Minor, Major 버전이다. 각 버전의 숫자는 아래와 같은 변경 사항이 발생할 때마다 대응되는 버전의 숫자를 증가시키고, 하위 버전의 숫자를 0으로 초기화하며 업데이트한다.")],-1),R=n("ul",null,[n("li",null,"Patch: (이전 버전과 호환 가능한) 버그 픽스"),n("li",null,"Minor: (이전 버전과 호환 가능한) 기능 추가"),n("li",null,"Major: (이전 버전과 호환 불가능한) 변경 사항")],-1),W={href:"https://semver.org/lang/ko/",target:"_blank",rel:"noopener noreferrer"},X={href:"https://docs.npmjs.com/about-semantic-versioning",target:"_blank",rel:"noopener noreferrer"},G=o(`<h3 id="코드-작성" tabindex="-1"><a class="header-anchor" href="#코드-작성" aria-hidden="true">#</a> 코드 작성</h3><p>이제 라이브러리화 하려는 모듈의 코드를 작성한다.</p><p>라이브러리 디렉토리 내에서 어느 경로에 작성해도 상관없지만, 편의를 위해 소스코드를 모아두는 src/ 디렉토리를 만들어 해당 디렉토리 내부에 모듈 코드를 작성하겠다.</p><p>이번 포스팅에서는 <code>add</code>, <code>subtract</code>, <code>multiply</code>, <code>divide</code>의 4가지 간단한 함수를 포함한 모듈을 예시로 작성한다.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// src/index.js</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">subtract</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">*</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">/</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// commonjs export</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  add<span class="token punctuation">,</span>
  subtract<span class="token punctuation">,</span>
  multiply<span class="token punctuation">,</span>
  divide<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="로컬-배포-및-테스트" tabindex="-1"><a class="header-anchor" href="#로컬-배포-및-테스트" aria-hidden="true">#</a> 로컬 배포 및 테스트</h3><p>개요에서 언급했던 아래 조건을 무시하면, 사실 라이브러리 배포를 위한 필수 조건은 다 갖추었다.</p><blockquote><p>배포된 라이브러리는 <code>ESM</code> 및 <code>CommonJS</code>를 지원하고, <code>Typescript</code>를 지원하도록 구성할 것이다.</p></blockquote><p>그럼 현재 상태로 그냥 배포하면 안되는 걸까?</p><p>실제로 테스트 해보자. NPM에 배포하지 않아도 로컬에서 개발한 패키지를 사용해볼 수 있다.</p><p>모듈 디렉토리에서 다음 명령을 실행하여 NPM의 global 라이브러리가 설치된 폴더에 현재 폴더의 symbolic link를 생성한다.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">link</span>
</code></pre></div>`,12),K={class:"hint-container note"},Q=n("p",{class:"hint-container-title"},"npm link 이해하기",-1),Y=n("p",null,"npm link의 동작 방식을 좀 더 알아보고 싶다면 아래 글에 잘 정리되어 있다.",-1),Z={href:"https://medium.com/dailyjs/how-to-use-npm-link-7375b6219557",target:"_blank",rel:"noopener noreferrer"},$=o(`<p>이제 우리의 라이브러리를 사용할 클라이언트 단 코드를 작성해보자.</p><p>임의의 다른 디렉토리로 이동하고 package.json 을 작성한다.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>
<span class="token function">mkdir</span> client
<span class="token builtin class-name">cd</span> client
<span class="token function">npm</span> init <span class="token parameter variable">-y</span>
</code></pre></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;client&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.0.1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;MIT&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이후 아래 명령을 통해 앞서 생성한 라이브러리를 의존성에 추가한다.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">link</span> bisue-utils
</code></pre></div><p>테스트를 위해 라이브러리를 사용하는 클라이언트 코드를 작성한다.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token comment">// commonjs import</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> add<span class="token punctuation">,</span> divide<span class="token punctuation">,</span> multiply<span class="token punctuation">,</span> subtract <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bisue-utils&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">divide</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>작성한 클라이언트 코드를 실행하여 라이브러리가 잘 동작하는지 확인한다.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> index.js
</code></pre></div><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token number">3</span>
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">2</span>
</code></pre></div><p>잘 동작한다! 그러나 지금의 라이브러리는 문제가 많이 존재한다.</p><p>지금의 상황은 라이브러리 내 모듈이 CommonJS 방식으로 export 하고, 클라이언트도 CommonJS 방식으로 import 하는 방식이다.</p><p>그렇다면 클라이언트가 일반적으로 많이 사용하는 ESM 방식으로 import 하면 어떻게 될까?</p>`,14),nn=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token comment"},"// package.json"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},'"name"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"client"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"version"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"0.0.1"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"type"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"module"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"main"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"index.js"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"license"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"MIT"'),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),sn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{javascript:"",class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// index.js"),s(`
`),n("span",{class:"token comment"},"// esm import"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" add"),n("span",{class:"token punctuation"},","),s(" divide"),n("span",{class:"token punctuation"},","),s(" multiply"),n("span",{class:"token punctuation"},","),s(" subtract "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"bisue-utils"'),n("span",{class:"token punctuation"},";"),s(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"subtract"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"multiply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"divide"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),an=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> index.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token number">3</span>
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">2</span>
</code></pre></div><p>역시 잘 동작한다!</p><p>그러면 이제 라이브러리 디렉토리로 돌아와서, export 방식을 ESM으로 변경해보자.</p>`,4),en=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{javascript:"",class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// src/index.js"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"+"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"subtract"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"-"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"multiply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"*"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"divide"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"/"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// esm export"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token punctuation"},"{"),s(`
  add`),n("span",{class:"token punctuation"},","),s(`
  subtract`),n("span",{class:"token punctuation"},","),s(`
  multiply`),n("span",{class:"token punctuation"},","),s(`
  divide`),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," ")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),tn=o(`<p>다시 클라이언트 디렉토리로 돌아와서 실행해보자.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> index.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token number">3</span>
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">2</span>
</code></pre></div><p>잘 동작한다.</p><p>마지막으로 클라이언트를 다시 CommonJS 방식으로 바꿔보자.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;client&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.0.1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;MIT&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token comment">// commonjs import</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> add<span class="token punctuation">,</span> divide<span class="token punctuation">,</span> multiply<span class="token punctuation">,</span> subtract <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bisue-utils&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">divide</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> index.js
</code></pre></div><div class="language-plaintext" data-ext="plaintext"><pre class="language-plaintext"><code>ReferenceError: require is not defined in ES module scope, you can use import instead
This file is being treated as an ES module because it has a &#39;.js&#39; file extension and &#39;...&#39; contains &quot;type&quot;: &quot;module&quot;. To treat it as a CommonJS script, rename it to use the &#39;.cjs&#39; file extension.
</code></pre></div><p>이번에는 오류가 발생한다!</p><p>위 케이스들을 정리하면 다음과 같다.</p><table><thead><tr><th>라이브러리</th><th>클라이언트</th><th>결과</th></tr></thead><tbody><tr><td>CommonJS export</td><td>CommonJS import</td><td>O</td></tr><tr><td>CommonJS export</td><td>ESM import</td><td>O</td></tr><tr><td>ESM export</td><td>ESM import</td><td>O</td></tr><tr><td>ESM export</td><td>CommonJS import</td><td>X</td></tr></tbody></table><p>요약하면 라이브러리 내부 코드에서 ESM을 사용하면 CommonJS를 사용하는 클라이언트를 지원할 수 없게 된다.</p><p>따라서 라이브러리 내부에서 ESM을 사용하고 싶다면, 추가적인 작업이 필요하다.</p><h2 id="esm-및-commonjs-지원" tabindex="-1"><a class="header-anchor" href="#esm-및-commonjs-지원" aria-hidden="true">#</a> ESM 및 CommonJS 지원</h2><p>라이브러리가 ESM과 CommonJS 방식의 클라이언트를 모두 지원하기 위해서는 CommonJS 방식의 export를 사용하는 파일, ESM 방식의 export를 사용하는 파일을 별도로 두고 package.json에 <code>exports</code> 프로퍼티로 명시해주어야 한다.</p>`,16),on=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{javascript:"",class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// src/index.cjs"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"+"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"subtract"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"-"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"multiply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"*"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"divide"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"/"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// commonjs export"),s(`
module`),n("span",{class:"token punctuation"},"."),s("exports "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
  add`),n("span",{class:"token punctuation"},","),s(`
  subtract`),n("span",{class:"token punctuation"},","),s(`
  multiply`),n("span",{class:"token punctuation"},","),s(`
  divide`),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," ")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),pn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{javascript:"",class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// src/index.cjs"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"+"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"subtract"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"-"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"multiply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"*"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"divide"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"/"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// esm export"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token punctuation"},"{"),s(`
  add`),n("span",{class:"token punctuation"},","),s(`
  subtract`),n("span",{class:"token punctuation"},","),s(`
  multiply`),n("span",{class:"token punctuation"},","),s(`
  divide`),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," ")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),cn=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token comment"},"// package.json"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},'"name"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"bisue-utils"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"version"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"0.0.1"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"type"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"module"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"main"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"index.js"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"exports"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"."'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token property"},'"import"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"./src/index.js"'),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token property"},'"require"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"./src/index.cjs"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"author"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Bisue"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"license"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"MIT"'),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),ln=o(`<p><code>exports</code> 프로퍼티는 다음과 같이 구성된다.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;SUB_PATH&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PATH_D.TS&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;import&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PATH_ESM&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;require&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PATH_CJS&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SUB_PATH</code>는 라이브러리를 import 할 때 <code>라이브러리명/SUB_PATH</code> 처럼 경로를 지정할 때 사용된다. 현재 라이브러리는 별도의 서브 경로를 두지 않을 것이므로 현재 디렉토리를 나타내는 <code>.</code>을 사용한다.</p><p><code>types</code>는 이후 타입스크립트 지원을 추가할 때 <code>d.ts</code> 파일의 경로를 지정하는데 사용된다. 이 단계에서는 사용하지 않는다.</p><p><code>import</code>는 ESM 방식의 export를 사용하는 파일 경로를 지정하는데 사용된다.</p><p><code>require</code>는 CommonJS 방식의 export를 사용하는 파일 경로를 지정하는데 사용된다. 일반적으로 <code>.cjs</code> 확장자를 사용한다.</p>`,6),un={class:"hint-container note"},rn=n("p",{class:"hint-container-title"},"exports 더 알아보기",-1),dn=n("p",null,"exports에 사용할 수 있는 프로퍼티는 더 많이 있다. 더 알아보고 싶다면 아래 문서를 참고하면 좋다.",-1),kn={href:"https://nodejs.org/api/packages.html#conditional-exports",target:"_blank",rel:"noopener noreferrer"},mn=o(`<p>이제 우리의 라이브러리는 CommonJS와 ESM 방식 모두 사용가능하다.</p><p>다만 CommonJS 방식과 ESM 방식의 코드를 모두 직접 관리해야 하는 점이 마음에 걸린다.</p><p>이 부분은 타입스크립트 지원을 추가하면서 동시에 해결해본다.</p><h2 id="타입스크립트-지원" tabindex="-1"><a class="header-anchor" href="#타입스크립트-지원" aria-hidden="true">#</a> 타입스크립트 지원</h2><p>현재 우리의 라이브러리는 타입스크립트를 사용하는 클라이언트에서 사용할 수 없다.</p><p>상황을 파악해보기 위해 타입스크립트 환경의 클라이언트를 구성해보자.</p><p>이전에 만들어놓았던 클라이언트 디렉토리로 이동하여 타입스크립트 환경을 구성한다.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> typescript ts-node
npx tsc <span class="token parameter variable">--init</span>
</code></pre></div>`,8),bn=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token comment"},"// tsconfig.json"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},'"ts-node"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"esm"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"compilerOptions"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"target"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"es2016"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"module"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"commonjs"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"esModuleInterop"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"forceConsistentCasingInFileNames"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"strict"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"skipLibCheck"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),vn=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token comment"},"// package.json"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},'"name"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"client"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"version"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"0.0.1"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token comment"},'// "type": "module",'),s(`
  `),n("span",{class:"token property"},'"main"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"index.ts"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"dependencies"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"bisue-utils"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^0.0.1"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"ts-node"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^10.9.1"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"typescript"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^5.2.2"'),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"scripts"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"start"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"ts-node index.ts"'),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"author"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Bisue"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"license"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"MIT"'),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),hn=o(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// index.ts</span>
<span class="token comment">// esm import</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> add<span class="token punctuation">,</span> divide<span class="token punctuation">,</span> multiply<span class="token punctuation">,</span> subtract <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;bisue-utils&quot;</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">divide</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run start
</code></pre></div><div class="language-plaintext" data-ext="plaintext"><pre class="language-plaintext"><code>error TS2307: Cannot find module &#39;bisue-utils&#39; or its corresponding type declarations.
</code></pre></div><p>현재 우리의 라이브러리는 타입과 관련된 정보를 전달하는 파일이 존재하지 않아 타입스크립트 환경에서 사용하면 문제가 발생한다.</p><h3 id="타입-정보-d-ts-추가" tabindex="-1"><a class="header-anchor" href="#타입-정보-d-ts-추가" aria-hidden="true">#</a> 타입 정보(d.ts) 추가</h3><p>타입 정보를 추가하기 위해, 라이브러리 디렉토리로 이동하여 타입스크립트를 의존성에 추가한다. 추가로 node 내장 모듈의 타입도 같이 추가한다.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> typescript @types/node
</code></pre></div><p>이어서 tsconfig.json 파일도 추가해준다.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;es6&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;commonjs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;es5&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;es6&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;dom&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;declaration&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 타입 정보(d.ts) 생성 여부</span>
    <span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 컴파일 결과 디렉토리</span>
    <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src/index.ts&quot;</span><span class="token punctuation">]</span> <span class="token comment">// 컴파일 대상</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>라이브러리의 코드를 타입스크립트로 변경한다.</p>`,10),gn=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{typescript:"",class:"language-typescript"},[n("code",null,[n("span",{class:"token comment"},"// src/index.ts"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},","),s(" b"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"+"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"subtract"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},","),s(" b"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"-"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"multiply"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},","),s(" b"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"*"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"divide"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},","),s(" b"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" a "),n("span",{class:"token operator"},"/"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// esm export"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token punctuation"},"{"),s(`
  add`),n("span",{class:"token punctuation"},","),s(`
  subtract`),n("span",{class:"token punctuation"},","),s(`
  multiply`),n("span",{class:"token punctuation"},","),s(`
  divide`),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),yn=n("p",null,"package.json에 빌드 스크립트를 추가하고, 실행한다.",-1),fn=n("p",null,"prepack 스크립트는 NPM 배포 명령인 npm publish 명령 실행 시 자동으로 실행되는 명령이다.",-1),_n=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// ..."),s(`
    `),n("span",{class:"token property"},'"scripts"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token property"},'"prepack"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"npm run build"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token property"},'"build"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"npm run build:tsc"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token property"},'"build:tsc"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"npx tsc"'),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token comment"},"// ..."),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),jn=n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(` run build
`)])])],-1),xn=n("p",null,"package.json의 main 및 exports 프로퍼티의 경로를 수정한다.",-1),qn=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},'"name"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"bisue-utils"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"version"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"0.0.1"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"main"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"dist/index.js"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"scripts"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"build"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"npm run build:tsc"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"build:tsc"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"npx tsc"'),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"exports"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"."'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token property"},'"types"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"./dist/index.d.ts"'),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token property"},'"import"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"./dist/index.js"'),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token property"},'"require"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"./src/index.cjs"'),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"author"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Bisue"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"license"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"MIT"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"devDependencies"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"@types/node"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^20.8.8"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"typescript"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^5.2.2"'),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Sn=o(`<p>이제 타입스크립트 지원이 추가되었다.</p><p>하지만 현재는 ESM으로만 컴파일되고, CommonJS는 따로 관리된다. 통합적으로 관리할 수 있도록 설정해보자.</p><h3 id="타입스크립트-esm-commonjs" tabindex="-1"><a class="header-anchor" href="#타입스크립트-esm-commonjs" aria-hidden="true">#</a> 타입스크립트 -&gt; ESM/CommonJS</h3><h4 id="_1-esbuild" tabindex="-1"><a class="header-anchor" href="#_1-esbuild" aria-hidden="true">#</a> 1) ESBuild</h4><p>하나의 타입스크립트 파일로부터 ESM 및 CommonJS 방식의 js 파일을 컴파일 하는 방법은 다양하다.</p><p>본 포스팅에서는 ESBuild를 사용하여 컴파일 프로세스를 구성해본다.</p><p>이를 위해 먼저 ESBuild를 라이브러리의 devDependencies에 추가한다.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> esbuild
</code></pre></div><p>이후 다소 복잡한 빌드 프로세스를 CLI 대신 스크립트 파일로 관리하기 위해 <code>build.js</code> 파일을 생성하여 작성한다.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// build.js</span>
<span class="token keyword">import</span> esbuild <span class="token keyword">from</span> <span class="token string">&quot;esbuild&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> baseConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entryPoints</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src/index.ts&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 컴파일 대상</span>
  <span class="token literal-property property">outdir</span><span class="token operator">:</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 컴파일 위치</span>
  <span class="token literal-property property">bundle</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 번들링 여부</span>
  <span class="token literal-property property">sourcemap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 소스맵 생성 여부</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token comment">// cjs</span>
  esbuild<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token operator">...</span>baseConfig<span class="token punctuation">,</span>
    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&quot;cjs&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">outExtension</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;.js&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.cjs&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment">// esm</span>
  esbuild<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token operator">...</span>baseConfig<span class="token punctuation">,</span>
    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&quot;esm&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Build failed...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>스크립트를 살펴보면, <code>baseConfig</code>는 CommonJS와 ESM 방식의 컴파일 모두에서 사용할 ESBuild 옵션을 설정하고 있다.</p><p><code>entryPoints</code> 옵션은 컴파일을 시작할 시작점이 될 스크립트들을 지정한다.<br><code>outdir</code> 옵션은 컴파일이 끝난 js 파일이 저장될 경로를 지정한다.<br><code>bundle</code> 옵션은 각 파일에서 import로 사용한 코드들을 모두 inline 형태로 가져와 단일 파일에 저장하는 기능의 활성화 여부를 지정한다. 기본값은 <code>false</code> 이다.<br><code>sourcemap</code> 옵션은 각 결과 파일의 소스맵을 생성하는 기능의 활성화 여부를 지정한다.</p><p>이후 <code>build</code> 메서드를 이용하여 CommonJS, ESM 방식의 컴파일을 총 2번 진행한다. 해당 메서드는 Promise를 반환하므로 두 빌드가 모두 완료될 때 까지 대기하기 위해 <code>Promise.all</code> 메서드로 대기한다.</p><p>CommonJS 빌드에서는 <code>format</code> 옵션을 <code>cjs</code>로 설정해주고, 결과물의 확장자를 <code>.cjs</code>로 변경한다.</p><p>ESM 빌드에서는 <code>format</code> 옵션을 <code>esm</code>으로 설정한다.</p><p>빌드 스크립트 작성이 완료되었으므로, 이를 이용하여 라이브러리를 빌드하는 스크립트를 <code>package.json</code>에 추가한다.</p>`,16),Mn=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},'"name"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"bisue-utils"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"version"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"0.0.1"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"main"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"dist/index.js"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"scripts"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"prepack"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"npm run build"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"clean"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"npx rimraf dist"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"build"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"npm run clean && npm run build:tsc && npm run build:js"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"build:tsc"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"npx tsc --emitDeclarationOnly"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"build:js"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"node build.js"'),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"exports"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"."'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token property"},'"types"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"./dist/index.d.ts"'),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token property"},'"import"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"./dist/index.js"'),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token property"},'"require"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"./dist/index.cjs"'),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"author"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Bisue"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"license"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"MIT"'),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token property"},'"devDependencies"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"@types/node"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^20.8.8"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"esbuild"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^0.19.5"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"rimraf"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^5.0.5"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"typescript"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"^5.2.2"'),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),wn=o(`<p>빌드를 진행하기 전 이전 빌드 결과물을 모두 삭제하여 깨끗한 빌드를 수행하기 위해 <code>clean</code> 스크립트를 추가하였다. 이때, 운영체제에 독립적인 동작을 위해 <code>rimraf</code> 라이브러리를 <code>devDependencies</code>에 추가하여 사용한다.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> rimraf
</code></pre></div><p>또한 현재 ESBuild는 타입 정보인 <code>d.ts</code> 컴파일을 지원하지 않기 때문에 CommonJS, ESM 방식 <code>js</code> 파일 생성을 위해서는 ESBuild를 사용하되, <code>d.ts</code> 생성을 위해서는 기존 tsc를 사용해야 한다.</p><p>따라서 기존 <code>build:tsc</code> 스크립트는 <code>emitDeclarationOnly</code> 옵션을 추가하여 타입 정보만 컴파일하도록 수정한 뒤, 앞서 작성한 build.js 파일을 실행하여 ESBuild 컴파일을 진행하는 build:js 스크립트를 추가한다.</p><p>이후 <code>clean</code> 스크립트를 수행하여 <code>dist</code> 디렉토리를 삭제한 뒤, <code>build:tsc</code>와 <code>build:js</code> 스크립트를 모두 수행하는 <code>build</code> 스크립트를 추가한다.</p><p><code>prepack</code> 스크립트는 패키지를 압축하는 <code>npm pack</code>, <code>npm publish</code> 스크립트가 실행되기 전 자동으로 실행되는 스크립트이다.</p><p>마지막으로 CommonJS 파일의 경로를 지정하는 <code>exports</code>의 <code>require</code> 옵션을 기존 <code>src</code> 내 <code>.cjs</code> 파일에서 생성할 <code>dist</code>의 <code>.cjs</code> 파일로 변경한다. <code>src</code> 경로 내 존재했던 <code>.cjs</code> 파일은 더 이상 필요없으니 삭제한다.</p><p>스크립트 추가가 완료되었으면 <code>build</code> 스크립트를 실행하여 컴파일이 잘 수행되는지 확인한다.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run build
</code></pre></div><figure><img src="`+m+`" alt="dist 폴더" tabindex="0" loading="lazy"><figcaption>dist 폴더</figcaption></figure><p>CommonJS, ESM, 소스맵, 타입 정보가 모두 생성됨을 확인할 수 있다.</p><h4 id="_2-others" tabindex="-1"><a class="header-anchor" href="#_2-others" aria-hidden="true">#</a> 2) Others</h4><p>(ESBuild 이외의 가능한 방법에 대해 작성중)</p><h3 id="npm-배포" tabindex="-1"><a class="header-anchor" href="#npm-배포" aria-hidden="true">#</a> NPM 배포</h3><p>이제 모든 준비가 끝났다.</p><p>NPM에 배포하기 전 <code>package.json</code>에서 마지막으로 설정해줘야 할 옵션이 있다.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;dist&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;src&quot;</span>
  <span class="token punctuation">]</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>files</code> 옵션은 배포될 NPM 패키지에 포함될 파일/폴더를 지정해주는 옵션이다. <code>dist</code> 폴더는 당연히 포함되어야 하고, <code>src</code> 폴더는 원본 소스 코드를 확인하고자 하는 사용자를 위해 포함한다.</p><p>이제 드디어 NPM에 배포를 진행한다.</p><p>배포 전, 가장 처음에 만들었던 NPM 계정으로 로그인을 해야한다.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> login
</code></pre></div><p>로그인 한 뒤, 다음 명령을 통해 배포한다.</p><div class="hint-container info"><p class="hint-container-title">버전 업</p><p>배포 전 버전을 수정하려면 package.json에서 직접 변경해도 되지만, 명령어를 통해서 쉽게 변경할 수도 있다.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> version major <span class="token comment"># major 버전 업 (minor, patch 0으로 초기화)</span>
<span class="token function">npm</span> version minor <span class="token comment"># minor 버전 업 (patch 0으로 초기화)</span>
<span class="token function">npm</span> version patch <span class="token comment"># patch 버전 업</span>
</code></pre></div></div><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> publish
</code></pre></div><p>NPM 배포가 완료되었다!</p><p>이제 NPM 홈페이지에 로그인하면 자신이 배포한 라이브러리를 확인할 수 있고, 다른 NPM 라이브러리처럼 설치할 수 있다.</p>`,26);function Pn(Nn,En){const p=c("ExternalLinkIcon"),e=c("router-link");return u(),r("div",null,[v,h,g,l(" more "),y,n("div",f,[_,n("p",null,[n("a",j,[s("간단한 유틸 함수 NPM 라이브러리 배포해보기 (feat. TypeScript 지원, ESM 지원)"),a(p)])])]),x,n("nav",q,[n("ul",null,[n("li",null,[a(e,{to:"#개요"},{default:t(()=>[s("개요")]),_:1})]),n("li",null,[a(e,{to:"#목차"},{default:t(()=>[s("목차")]),_:1})]),n("li",null,[a(e,{to:"#사전-준비"},{default:t(()=>[s("사전 준비")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#npm-계정-준비"},{default:t(()=>[s("NPM 계정 준비")]),_:1})]),n("li",null,[a(e,{to:"#node-개발-환경-준비"},{default:t(()=>[s("Node 개발 환경 준비")]),_:1})])])]),n("li",null,[a(e,{to:"#라이브러리-작성"},{default:t(()=>[s("라이브러리 작성")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#npm-init"},{default:t(()=>[s("NPM Init")]),_:1})]),n("li",null,[a(e,{to:"#코드-작성"},{default:t(()=>[s("코드 작성")]),_:1})]),n("li",null,[a(e,{to:"#로컬-배포-및-테스트"},{default:t(()=>[s("로컬 배포 및 테스트")]),_:1})])])]),n("li",null,[a(e,{to:"#esm-및-commonjs-지원"},{default:t(()=>[s("ESM 및 CommonJS 지원")]),_:1})]),n("li",null,[a(e,{to:"#타입스크립트-지원"},{default:t(()=>[s("타입스크립트 지원")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#타입-정보-d-ts-추가"},{default:t(()=>[s("타입 정보(d.ts) 추가")]),_:1})]),n("li",null,[a(e,{to:"#타입스크립트-esm-commonjs"},{default:t(()=>[s("타입스크립트 -> ESM/CommonJS")]),_:1})]),n("li",null,[a(e,{to:"#npm-배포"},{default:t(()=>[s("NPM 배포")]),_:1})])])])])]),S,M,w,P,N,n("p",null,[n("a",E,[s("NPM"),a(p)])]),n("div",C,[J,T,B,I,n("p",null,[n("a",V,[s("NPM Pricing"),a(p)])])]),l(` ::: info 일반 유저 vs 조직
[NPM 문서](https://docs.npmjs.com/organizations)
::: `),D,O,n("div",A,[H,n("figure",null,[z,n("figcaption",null,[s("Semantic Versioning("),n("a",F,[s("https://commons.wikimedia.org/wiki/File:SemanticVersioning.png"),a(p)]),s(")")])]),L,U,R,n("p",null,[n("a",W,[s("Semantic Versioning"),a(p)]),s(),n("a",X,[s("NPM Semantic Versioning"),a(p)])])]),G,n("div",K,[Q,Y,n("p",null,[n("a",Z,[s("Understanding npm-link"),a(p)])])]),$,nn,sn,an,en,tn,on,pn,cn,ln,n("div",un,[rn,dn,n("p",null,[n("a",kn,[s("Node - Conditional Exports"),a(p)])])]),mn,bn,vn,hn,gn,yn,fn,_n,jn,xn,qn,Sn,Mn,wn])}const Jn=i(b,[["render",Pn],["__file","1-NPM-deployment-1.html.vue"]]);export{Jn as default};
